services:
  db:
    image: postgres:16
    container_name: prova-hidrica-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres-data-new:/var/lib/postgresql/data
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "prova-hidrica-db"
        env: "production"

  backend:
    container_name: prova-hidrica-backend
    restart: always
    build:
      context: ./src/api/
      dockerfile: Dockerfile
    ports:
      - '4000:4000'
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DIALECT_DATABASE: ${DIALECT_DATABASE}
    networks:
      - app-network
    depends_on:
      - db
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        labels: "prova-hidrica-backend"
        env: "production"

  frontend:
    container_name: prova-hidrica-frontend
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - cert:/usr/src/app/cert
    networks:
      - app-network
    depends_on:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "prova-hidrica-frontend"
        env: "production"

  pgadmin:
    image: dpage/pgadmin4
    container_name: prova-hidrica-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '5050:80'
    depends_on:
      - db
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "prova-hidrica-pgadmin"
        env: "production"

  loki:
    image: grafana/loki:3.2.1
    container_name: prova-hidrica-loki
    ports:
      - "3100:3100"
    volumes:
      - ./config/loki/local-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - app-network

  promtail:
    image: grafana/promtail:3.2.1
    container_name: prova-hidrica-promtail
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./config/promtail/config.yml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - promtail-positions:/tmp
    command: -config.file=/etc/promtail/config.yml
    networks:
      - app-network
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    container_name: prova-hidrica-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - app-network
    depends_on:
      - loki

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data-new:
  cert:
  loki-data:
  grafana-data:
  promtail-positions:
